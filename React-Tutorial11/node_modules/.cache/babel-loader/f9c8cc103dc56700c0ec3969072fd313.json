{"ast":null,"code":"var _jsxFileName = \"/home/ag04admin/React-Tutorial11/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== \"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== \"\";\n  const emailInputIsValid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredEmail); //nameInputRef.current.value = \"\"; --> not ideal - directly manipulating with DOM\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsValid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), nameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), emailInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"OxC7lqRyWt5yVqBcfOD5LzihCRc=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/ag04admin/React-Tutorial11/src/components/SimpleInput.js"],"names":["useEffect","useState","useInput","SimpleInput","props","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","emailInputIsValid","formIsValid","enteredNameIsValid","nameInputChangeHandler","event","setEnteredName","target","nameInputBlurHandler","setEnteredNameTouched","emailInputChangeHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","nameInputIsValid","emailInputClasses"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput((value) => value.trim() !== \"\");\n\n  \n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  \n\n  const enteredEmailIsValid = enteredEmail.trim() !== \"\";\n  const emailInputIsValid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredEmail);\n\n    //nameInputRef.current.value = \"\"; --> not ideal - directly manipulating with DOM\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsValid && (\n          <p className=\"error-text\">Name must not be empty!</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your E-mail</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsValid && (\n          <p className=\"error-text\">Please enter a valid email</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}