{"ast":null,"code":"var _jsxFileName = \"/home/ag04admin/React-Tutorial11/src/components/BasicForm.js\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  var _s = $RefreshSig$();\n\n  const isNotEmpty = value => value.trim() !== \"\";\n\n  const isEmail = value => value.includes(\"@\");\n\n  const BasicForm = props => {\n    _s();\n\n    const {\n      value: firstNameValue,\n      isValid: frstNameIsValid,\n      hasError: firstNameInputHasError,\n      valueChangeHandler: firstNameChangedHandler,\n      inputBlurHandler: firstNameBlurHandler,\n      reset: resetFirstName\n    } = useInput(isNotEmpty);\n    const {\n      value: lastNameValue,\n      isValid: lastNameIsValid,\n      hasError: lastNameInputHasError,\n      valueChangeHandler: lastNameChangedHandler,\n      inputBlurHandler: lastNameBlurHandler,\n      reset: resetLastName\n    } = useInput(isNotEmpty);\n    const {\n      value: emailValue,\n      isValid: emailIsValid,\n      hasError: emailInputHasError,\n      valueChangeHandler: emailChangedHandler,\n      inputBlurHandler: emailBlurHandler,\n      reset: resetEmail\n    } = useInput(isEmail);\n  };\n\n  _s(BasicForm, \"aeMxfORVqhhIdequC19WQQa/MLs=\", false, function () {\n    return [useInput, useInput, useInput];\n  });\n\n  const firstNameClasses = firstNameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameClasses = lastNameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const emailClasses = emailInputHasError ? \"form-control invalid\" : \"form-control\";\n  let formIsValid = false;\n\n  if (frstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    resetFirstName();\n    resetLastName();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangedHandler,\n          onBlur: firstNameBlurHandler,\n          value: firstNameValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), \" \", firstNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please enter a first name!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangedHandler,\n          onBlur: lastNameBlurHandler,\n          value: lastNameValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), lastNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please enter a valid last name!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailChangedHandler,\n        onBlur: emailBlurHandler,\n        value: emailValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/home/ag04admin/React-Tutorial11/src/components/BasicForm.js"],"names":["useInput","BasicForm","props","isNotEmpty","value","trim","isEmail","includes","firstNameValue","isValid","frstNameIsValid","hasError","firstNameInputHasError","valueChangeHandler","firstNameChangedHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstName","lastNameValue","lastNameIsValid","lastNameInputHasError","lastNameChangedHandler","lastNameBlurHandler","resetLastName","emailValue","emailIsValid","emailInputHasError","emailChangedHandler","emailBlurHandler","resetEmail","firstNameClasses","lastNameClasses","emailClasses","formIsValid","submitHandler","event","preventDefault"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  const isNotEmpty = (value) => value.trim() !== \"\";\n  const isEmail = (value) => value.includes(\"@\");\n\n  const BasicForm = (props) => {\n    const {\n      value: firstNameValue,\n      isValid: frstNameIsValid,\n      hasError: firstNameInputHasError,\n      valueChangeHandler: firstNameChangedHandler,\n      inputBlurHandler: firstNameBlurHandler,\n      reset: resetFirstName,\n    } = useInput(isNotEmpty);\n    const {\n      value: lastNameValue,\n      isValid: lastNameIsValid,\n      hasError: lastNameInputHasError,\n      valueChangeHandler: lastNameChangedHandler,\n      inputBlurHandler: lastNameBlurHandler,\n      reset: resetLastName,\n    } = useInput(isNotEmpty);\n    const {\n      value: emailValue,\n      isValid: emailIsValid,\n      hasError: emailInputHasError,\n      valueChangeHandler: emailChangedHandler,\n      inputBlurHandler: emailBlurHandler,\n      reset: resetEmail,\n    } = useInput(isEmail);\n  };\n\n  const firstNameClasses = firstNameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const lastNameClasses = lastNameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  let formIsValid = false;\n  if (frstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    resetFirstName();\n\n    resetLastName();\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangedHandler}\n            onBlur={firstNameBlurHandler}\n            value={firstNameValue}\n          />{\" \"}\n          {firstNameInputHasError && (\n            <p className=\"error-text\">Please enter a first name!</p>\n          )}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameChangedHandler}\n            onBlur={lastNameBlurHandler}\n            value={lastNameValue}\n          />\n          {lastNameInputHasError && (\n            <p className=\"error-text\">Please enter a valid last name!</p>\n          )}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={emailChangedHandler}\n          onBlur={emailBlurHandler}\n          value={emailValue}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Please enter a valid email!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}