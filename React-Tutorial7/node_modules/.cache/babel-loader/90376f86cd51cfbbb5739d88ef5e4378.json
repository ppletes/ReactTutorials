{"ast":null,"code":"var _jsxFileName = \"/home/ag04admin/React-Tutorial7/src/components/Users.js\";\nimport { Component, useState } from \"react\";\nimport User from \"./User\";\nimport classes from \"./Users.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_USERS = [{\n  id: \"u1\",\n  name: \"Max\"\n}, {\n  id: \"u2\",\n  name: \"Manuel\"\n}, {\n  id: \"u3\",\n  name: \"Julie\"\n}];\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showUser: true //moreSTate: 'Test'\n      //nestetState: {},\n      //arrayState: []\n\n    };\n  }\n\n  toggleUsersHandler() {\n    //this.state.showUser=false; --> NO!\n    //this.setState({ showUser: false }); --> if I have more states, only defined one will be changed OR:\n    //this.setState((curState) => !curState); --> use when this state depends on previous state\n    //returning object\n    this.setState(curState => {\n      return {\n        showUsers: !curState.showUsers\n      };\n    });\n  }\n\n  render() {\n    const usersList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: DUMMY_USERS.map(user => /*#__PURE__*/_jsxDEV(User, {\n        name: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this); //bind(this) --> \"this\" inside toggleUsersHandler() method is now set to have same context/value when keyword is revaluated (in button)\n\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: classes.users,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleUsersHandler.bind(this),\n        children: [this.state.showUsers ? \"Hide\" : \"Show\", \" Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), this.state.showUsers && usersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  }\n\n} // const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? \"Hide\" : \"Show\"} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\n\nexport default Users;","map":{"version":3,"sources":["/home/ag04admin/React-Tutorial7/src/components/Users.js"],"names":["Component","useState","User","classes","DUMMY_USERS","id","name","Users","constructor","state","showUser","toggleUsersHandler","setState","curState","showUsers","render","usersList","map","user","users","bind"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CADkB,EAElB;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAFkB,EAGlB;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAHkB,CAApB;;AAMA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC5BQ,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC,CAEX;AACA;AACA;;AAJW,KAAb;AAMD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB;AACA;AACA;AAEA;AACA,SAAKC,QAAL,CAAeC,QAAD,IAAc;AAC1B,aAAO;AAAEC,QAAAA,SAAS,EAAE,CAACD,QAAQ,CAACC;AAAvB,OAAP;AACD,KAFD;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,gBACb;AAAA,gBACGZ,WAAW,CAACa,GAAZ,CAAiBC,IAAD,iBACf,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAAI,CAACZ;AAA/B,SAAWY,IAAI,CAACb,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,CADO,CASP;;;AACA;AAAA;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACgB,KAAxB;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,KAAKR,kBAAL,CAAwBS,IAAxB,CAA6B,IAA7B,CAAjB;AAAA,mBACG,KAAKX,KAAL,CAAWK,SAAX,GAAuB,MAAvB,GAAgC,MADnC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIG,KAAKL,KAAL,CAAWK,SAAX,IAAwBE,SAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD;;AAtC2B,C,CAyC9B;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,KAAf","sourcesContent":["import { Component, useState } from \"react\";\nimport User from \"./User\";\n\nimport classes from \"./Users.module.css\";\n\nconst DUMMY_USERS = [\n  { id: \"u1\", name: \"Max\" },\n  { id: \"u2\", name: \"Manuel\" },\n  { id: \"u3\", name: \"Julie\" },\n];\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showUser: true,\n      //moreSTate: 'Test'\n      //nestetState: {},\n      //arrayState: []\n    };\n  }\n\n  toggleUsersHandler() {\n    //this.state.showUser=false; --> NO!\n    //this.setState({ showUser: false }); --> if I have more states, only defined one will be changed OR:\n    //this.setState((curState) => !curState); --> use when this state depends on previous state\n\n    //returning object\n    this.setState((curState) => {\n      return { showUsers: !curState.showUsers };\n    });\n  }\n\n  render() {\n    const usersList = (\n      <ul>\n        {DUMMY_USERS.map((user) => (\n          <User key={user.id} name={user.name} />\n        ))}\n      </ul>\n    );\n\n    //bind(this) --> \"this\" inside toggleUsersHandler() method is now set to have same context/value when keyword is revaluated (in button)\n    <div className={classes.users}>\n      <button onClick={this.toggleUsersHandler.bind(this)}>\n        {this.state.showUsers ? \"Hide\" : \"Show\"} Users\n      </button>\n      {this.state.showUsers && usersList}\n    </div>;\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? \"Hide\" : \"Show\"} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}