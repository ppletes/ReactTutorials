{"ast":null,"code":"var _jsxFileName = \"/home/ag04admin/React-Tutorial10/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport useHttp from \"./hooks/use-http\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [tasks, setTasks] = useState([]);\n  const {\n    isLoading,\n    error,\n    sendRequest: fetchTasks\n  } = useHttp();\n  useEffect(_s(() => {\n    _s();\n\n    const transformTasks = useCallback(tasksObj => {\n      const loadedTasks = [];\n\n      for (const taskKey in tasksObj) {\n        loadedTasks.push({\n          id: taskKey,\n          text: tasksObj[taskKey].text\n        });\n      }\n\n      setTasks(loadedTasks);\n    });\n    fetchTasks({\n      url: \"https://react-http-80c3d-default-rtdb.firebaseio.com/tasks.json\"\n    }, transformTasks);\n  }, \"Hamy57glcPrJpur6Vj57IHNKDho=\"), [fetchTasks]);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"3QapvwoJZfWeMEkerBpIx1ugNIA=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ag04admin/React-Tutorial10/src/App.js"],"names":["React","useEffect","useState","useHttp","Tasks","NewTask","App","tasks","setTasks","isLoading","error","sendRequest","fetchTasks","transformTasks","useCallback","tasksObj","loadedTasks","taskKey","push","id","text","url","taskAddHandler","task","prevTasks","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAgDT,OAAO,EAA7D;AAEAF,EAAAA,SAAS,IAAC,MAAM;AAAA;;AACd,UAAMY,cAAc,GAAGC,WAAW,CAAEC,QAAD,IAAc;AAC/C,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,OAAX,IAAsBF,QAAtB,EAAgC;AAC9BC,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,UAAAA,EAAE,EAAEF,OAAN;AAAeG,UAAAA,IAAI,EAAEL,QAAQ,CAACE,OAAD,CAAR,CAAkBG;AAAvC,SAAjB;AACD;;AAEDZ,MAAAA,QAAQ,CAACQ,WAAD,CAAR;AACD,KARiC,CAAlC;AAUAJ,IAAAA,UAAU,CACR;AACES,MAAAA,GAAG,EAAE;AADP,KADQ,EAIRR,cAJQ,CAAV;AAMD,GAjBQ,mCAiBN,CAACD,UAAD,CAjBM,CAAT;;AAmBA,QAAMU,cAAc,GAAIC,IAAD,IAAU;AAC/Bf,IAAAA,QAAQ,CAAEgB,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEf,KADT;AAEE,MAAA,OAAO,EAAEE,SAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;IAvCQN,G;UAG+CH,O;;;KAH/CG,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport useHttp from \"./hooks/use-http\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n\n  useEffect(() => {\n    const transformTasks = useCallback((tasksObj) => {\n      const loadedTasks = [];\n\n      for (const taskKey in tasksObj) {\n        loadedTasks.push({ id: taskKey, text: tasksObj[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n    });\n\n    fetchTasks(\n      {\n        url: \"https://react-http-80c3d-default-rtdb.firebaseio.com/tasks.json\",\n      },\n      transformTasks\n    );\n  }, [fetchTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}