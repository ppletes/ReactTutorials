{"ast":null,"code":"import { createStore } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./counter\";\nimport authReducer from \"./auth\"; //export const INCREMENT = \"increment\";\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return { counter: state.counter + 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n//   return state;\n// };\n//const store = createStore(counterSlice.reducer); --> if app is bigger this would be a problem because of more reducers - problem resolve: use configure store --> merge multiple reducers into one reducer\n//const store = configureStore({ reducer: counterSlice.reducer }); //use this as a global main reducer OR if there are multiple slices in bigger aplications use:\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authReducer\n  }\n}); //merge all reducers into one reducer\n\nexport default store;","map":{"version":3,"sources":["/home/ag04admin/AG04-tutorials/React-Tutorial12/src/store/index.js"],"names":["createStore","configureStore","counterReducer","authReducer","store","reducer","counter","auth"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,WAAP,MAAwB,QAAxB,C,CAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;AACA,MAAMC,KAAK,GAAGH,cAAc,CAAC;AAC3BI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAEJ,cAAX;AAA2BK,IAAAA,IAAI,EAAEJ;AAAjC;AADkB,CAAD,CAA5B,C,CAEI;;AAEJ,eAAeC,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./counter\";\nimport authReducer from \"./auth\";\n\n//export const INCREMENT = \"increment\";\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return { counter: state.counter + 1, showCounter: state.showCounter };\n//   }\n\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n\n//   return state;\n// };\n\n//const store = createStore(counterSlice.reducer); --> if app is bigger this would be a problem because of more reducers - problem resolve: use configure store --> merge multiple reducers into one reducer\n\n//const store = configureStore({ reducer: counterSlice.reducer }); //use this as a global main reducer OR if there are multiple slices in bigger aplications use:\nconst store = configureStore({\n  reducer: { counter: counterReducer, auth: authReducer },\n}); //merge all reducers into one reducer\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}